# Task 1
import json

with open('json_phonebook.json') as file:
    phonebook = json.load(file)


    name = input('Enter a name:')

    number = input('Enter a number:')


    if phonebook.get(name):
        print(f'{name} already exists. You need to delete a record and add again if you want to change it')
    else:
        phonebook[name] = number

    while True:
        user_input = input('Enter a command:')
        split_input = user_input.split()

        command = split_input[0]
        if command == 'stats':
            print(len(phonebook))


        elif command == 'add':
            name = input('Enter a name:')
            if not name in phonebook.keys():
                number = input('Enter a number:')
                phonebook[name] = number
                print('New contact was added')
            else:
                name in phonebook.keys()
                print("Fault. There is such name in a phonebook.")
                with open('json_phonebook.json', 'a') as file:
                    json.dump(phonebook, file)



        elif command == 'del':
            key = input('Enter some name: ')
            if phonebook.get(key):
                del phonebook[key]
                print("Record was deleted")
            else:
                print('Such record never existed')
                with open('json_phonebook.json', 'a') as file:
                    json.dump(phonebook, file)


        elif command == 'list':
            list = (phonebook.items())
            print(list)
        elif command == 'show':
            print(phonebook)
            name = input('Enter a name:')
            if name not in phonebook.keys():
                print("Fault. There is no such name in a phonebook.")
            else:
                print(phonebook[name])
        elif command == 'end':
            break

with open('json_phonebook.json', 'w') as file:
    json.dump(phonebook, file)


Task 2

import time
import os

f = open('log1.txt', "w+")
def log_message(func):

    def wrap(*args, **kwargs):
        print(time.ctime())
        return_value = func(*args, **kwargs)
        fname = func.__name__
        print(fname)
        f.write(time.ctime() +os.linesep)
        f.write(fname)
        return return_value

    return wrap

@log_message
def my_func():
    print('This is my func')
my_func()

f.close()


Task 3
import time
import os
import logging

try:
    printf("This is a mistake")
except Exception as Argument:

    f = open("log2.txt", "w")
    f.write(time.ctime() + os.linesep)
    f.write(str(Argument))

    f.close()
