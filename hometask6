# Task 1
#
# import time
# def my_decorator(func):
#     def wrap():
#         print(time.ctime())
#         func()
#         fname = func.__name__
#         print(fname)
#     return wrap
#
# @my_decorator
# def my_func():
#     print('This is my func')
#
# my_func()

# Task 2
# class MyException(Exception):
#     pass
# if True:
#     raise MyException('Custom exception is occured')

# Task 3

# while True:
#     try:
#         class CtxManager:
#             def __enter__(self):
#                 print('==========')
#                 # return "Hello, world!"
#                 while True:
# 
#                     n = int(input('Input a number: '))
#                     def f(n):
#                         a, b = 0, 1
#                         for i in range(0, n):
#                             a, b = b, a + b
#                         return a
#                     print(f(n))
#             def __exit__(self, exc_type, exc_val, exc_tb):
#                 print('==========')
# 
#         with CtxManager() as hello:
#             print(hello)
#     except Exception:
#         print("Exception")
#
#
#
#
# Task 4
# while True:
#     try:
#         print('==========')
#         while True:
#             n = int(input('Input a number: '))
#             def f(n):
#                 a, b = 0, 1
#                 for i in range(0, n):
#                     a, b = b, a + b
#                 return a
#             print(f(n))
#         print('==========')
#     except Exception:
#         print("Exception")


